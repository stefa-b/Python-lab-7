@@ -0,0 +1,160 @@
# Скомпилированные в байтах / оптимизированные / DLL файлы
__pycache__/
.py*[cod]
*$py.class

# Расширения C
*.so

# Распространение / упаковка
.Python
сборка/
развивающиеся яйцеклетки/
dist/
Загрузки/
яйца/
.яйца/
библиотека/
lib64/
запчасти/
sdist/
var/
колеса/
поделиться/python-wheels/
.egg-информация*/
.установлено.cfg
*.яйцо
МАНИФЕСТ

# PyInstaller
# Обычно эти файлы записываются скриптом python из шаблона
# перед тем, как PyInstaller соберет exe-файл, вставьте в него дату / другую информацию.
*.манифест
*.спецификация

# Журналы установки
pip-log.txt
pip-delete-this-directory.txt

# Модульный тест / отчеты о покрытии
htmlcov/
.токсин/
.nox/
.покрытие
.покрытие.*
.кэш
nosetests.xml
coverage.xml
*.Обложка
*.py,обложка
.гипотеза/
.pytest_cache/
обложка/

# Переводы
*.mo
*.горшок

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-журнал

# Flask stuff:
экземпляр/
.веб-ресурсы-кэш

# Ненужные вещи:
.scrapy

# Документация по Сфинксу
документы/_build/

# PyBuilder
.pybuilder/
цель/

# Записная книжка Jupyter
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv #598, рекомендуется включить Pipfile.заблокировать в системе управления версиями.
# Однако, в случае совместной работы, при наличии зависимостей, зависящих от платформы, или зависимостей
# не имея кроссплатформенной поддержки, pipenv может устанавливать зависимости, которые не работают, или не
# установите все необходимые зависимости.
#Pipfile.lock

# поэзия
# Аналогично Pipfile.блокировка, обычно рекомендуется включать poetry.блокировка в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и более
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
# Аналогично Pipfile.lock, обычно рекомендуется включать pdm.lock в систему управления версиями.
#pdm.lock
# pdm хранит конфигурации всего проекта в .pdm.toml, но рекомендуется не включать его
# в системе управления версиями.
# https://pdm.fming.dev/#использовать с ide
.pdm.toml

# PEP 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Начинка из сельдерея
celerybeat-расписание
celerybeat.pid

# Проанализированные файлы SageMath
*.sage.py

# Среды
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типа погребального костра
.Погребальный костер/

# статический анализатор типов pytype
.pytype/

# Символы отладки Cython
cython_debug/

# PyCharm
# Конкретный шаблон JetBrains поддерживается в отдельном файле JetBrains.gitignore, который может
# можно найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и может быть добавлен в глобальный gitignore или объединен в этот файл. Для более ядерного
Опция # (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
#.идея/
0 комментариев к записи b3bc795
Комментарий
 
Оставить комментарий
 
 Вы не получаете уведомлений из этой темы.
Footer
© 2023 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact
Manage cookiesDo not share my personal informationCreate .gitignore · Diana-372/Lab2.20@b3bc795
Оригинальный те
